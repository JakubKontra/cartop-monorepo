# Application
NODE_ENV=development
PORT=3000

# Database Configuration
DB_HOST=localhost
DB_PORT=5432
DB_USERNAME=postgres
DB_PASSWORD=postgres
DB_DATABASE=cartop_v3

# Database Connection Pool (Main)
DB_POOL_MAX=20
DB_POOL_MIN=5
DB_POOL_IDLE_TIMEOUT_MS=30000
DB_QUERY_TIMEOUT_MS=10000

# Database Connection Pool (Audit)
DB_AUDIT_POOL_MAX=10
DB_AUDIT_POOL_MIN=2

# AWS Configuration (LocalStack for development, AWS for production)
AWS_REGION=us-east-1
AWS_ENDPOINT=http://localhost:4566
# For production, remove AWS_ENDPOINT and use real AWS credentials
# AWS_ACCESS_KEY_ID=your-access-key
# AWS_SECRET_ACCESS_KEY=your-secret-key

# SQS Queue Names
SQS_WEBHOOKS_QUEUE=cartop-webhooks-queue
SQS_NOTIFICATIONS_QUEUE=cartop-notifications-queue
SQS_AUDIT_QUEUE=cartop-audit-queue

# JWT Authentication
JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
JWT_EXPIRATION=24h

# Audit Configuration
AUDIT_BATCH_SIZE=100
AUDIT_BATCH_INTERVAL_MS=5000

# pgAdmin (Optional - only when using docker-compose)
PGADMIN_EMAIL=admin@cartop.local
PGADMIN_PASSWORD=admin
PGADMIN_PORT=5050

# Email Configuration (Mailgun)
# Get your API key from: https://app.mailgun.com/settings/api_security
MAILGUN_API_KEY=your-mailgun-api-key
MAILGUN_DOMAIN=mg.yourdomain.com
EMAIL_FROM=noreply@yourdomain.com

# Mailpit (Development Email Testing)
# When using Mailpit for local development, configure these settings:
# Mailpit will automatically be used when NODE_ENV=development and SMTP_HOST is set
SMTP_HOST=localhost
SMTP_PORT=1025
# SMTP_USER=           # Optional - not needed for Mailpit
# SMTP_PASSWORD=       # Optional - not needed for Mailpit
# SMTP_SECURE=false    # Optional - set to true for TLS
# Web UI available at: http://localhost:8025

# Marketing Configuration (Ecomail)
# Get your API key from: https://app.ecomail.cz/settings/api
ECOMAIL_API_KEY=your-ecomail-api-key

# Cache Invalidation Webhook
# URL to your client application's revalidation endpoint
# Used by @Watch decorator to invalidate client-side cache when backend data changes
# Example for Next.js: http://localhost:3001/api/revalidate
CACHE_INVALIDATION_URL=http://localhost:3001/api/revalidate
# Secret token for authenticating cache invalidation webhooks
# This must match the REVALIDATION_SECRET in your client app's .env
CACHE_INVALIDATION_SECRET=dev-secret-change-in-production

# CORS Configuration
# Comma-separated list of allowed origins for CORS
# Example: http://localhost:3000,http://localhost:3001,https://yourdomain.com
CORS_ORIGINS=http://localhost:3000,http://localhost:3001

# Sentry Error Tracking
# Get your DSN from: https://sentry.io/settings/projects/<your-project>/keys/
SENTRY_DSN=
SENTRY_ENVIRONMENT=development
# Sample rate for performance monitoring (0.0 to 1.0)
SENTRY_TRACES_SAMPLE_RATE=0.1
# Sample rate for profiling (0.0 to 1.0)
SENTRY_PROFILES_SAMPLE_RATE=0.1

# Storage Configuration
# Choose storage driver: 'minio' for local development, 's3' for production
STORAGE_DRIVER=minio

# S3/LocalStack Configuration (for file uploads when using S3)
S3_BUCKET="cartop"
AWS_REGION="us-east-1"
AWS_ACCESS_KEY_ID="your-aws-access-key"
AWS_SECRET_ACCESS_KEY="your-aws-secret-key"
# For local development with LocalStack, set endpoint to LocalStack URL
AWS_ENDPOINT=http://localhost:4566

# MinIO Configuration (for local file storage)
MINIO_ENDPOINT=localhost
MINIO_PORT=1483
MINIO_USE_SSL=false
MINIO_ROOT_USER=cartop
MINIO_ROOT_PASSWORD=cartop1337
MINIO_DEFAULT_BUCKETS=cartop:download

# CDN/Storage URL for serving files
# For MinIO local development: http://localhost:1483/cartop
# For production S3: https://your-cloudfront-url or https://s3.amazonaws.com/your-bucket
CDN_URL=http://localhost:1483/cartop

# MySQL Legacy Database (for data migration)
# Only required when migrating data from old MySQL database
MYSQL_HOST=localhost
MYSQL_PORT=3306
MYSQL_USERNAME=root
MYSQL_PASSWORD=password
MYSQL_DATABASE=cartop_old
