services:
  postgres:
    image: postgres:16-alpine
    container_name: cartop-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USERNAME:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_DATABASE:-cartop_v3}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "${DB_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME:-postgres} -d ${DB_DATABASE:-cartop_v3}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - cartop-network

  # Redis for Bull queues and caching
  redis:
    image: redis:7-alpine
    container_name: cartop-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    ports:
      - "${REDIS_PORT:-6379}:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - cartop-network

  adminer:
    container_name: adminer
    image: michalhosna/adminer:latest
    ports:
      - '8080:8080'
    environment:
      ADMINER_DRIVER: pgsql
      ADMINER_SERVER: postgres
      ADMINER_DB: ${DB_DATABASE}
      ADMINER_USERNAME: ${DB_USERNAME}
      ADMINER_PASSWORD: ${DB_PASSWORD}
      ADMINER_AUTOLOGIN: 1
    networks:
      - cartop-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  cartop-network:
    driver: bridge
